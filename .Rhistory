#theme_minimal()+
theme_light()+
theme(legend.title=element_blank())+
labs(x=expression(bold("Relative Stock Status")),y=expression(bold("Fishing Intensity")))+
geom_vline(xintercept = c(0.5,0.62,1),lty=c(1,1,2),col=c("red","red","black"),lwd=c(1.25,1.25,1))+
geom_hline(yintercept = 1,lty=2)+
guides(shape = guide_legend(override.aes = list(size = 4)))+
geom_text(aes(1,1.5,color="black",label="TRP",angle=90,vjust=1.1,size=1.1))+
geom_text(aes(0.625,1.38,color="black",label="LRP: Rockfish",angle=90,vjust=1,size=1.1))+
geom_text(aes(0.5,1.4,color="black",label="LRP: Flatfish",angle=90,vjust=-0.1,size=1.1))
ggplot(quad.plot.WC,aes(B.Bmsy,F.Fmsy, label=Abb1,color=Spp_type,shape=Spp_type))+
geom_point()+
xlim(0,4)+
ylim(0,1.5)+
geom_text_repel(show.legend = FALSE,aes(label = Abb1))+
#theme_minimal()+
theme_light()+
theme(legend.title=element_blank())+
labs(x=expression(bold("Relative Stock Status")),y=expression(bold("Fishing Intensity")))+
geom_vline(xintercept = c(0.5,0.62,1),lty=c(1,1,2),col=c("red","red","black"),lwd=c(1.25,1.25,1))+
geom_hline(yintercept = 1,lty=2)+
guides(shape = guide_legend(override.aes = list(size = 4)))+
geom_text(aes(1,1.5,color="black",label="TRP",angle=90,vjust=1.1,size=1.1))+
geom_text(aes(0.625,1.35,color="black",label="LRP: Rockfishes",angle=90,vjust=1,size=1.1))+
geom_text(aes(0.5,1.4,color="black",label="LRP: Flatfish",angle=90,vjust=-0.1,size=1.1))
ggplot(quad.plot.WC,aes(B.Bmsy,F.Fmsy, label=Abb1,color=Spp_type,shape=Spp_type))+
geom_point()+
xlim(0,4)+
ylim(0,1.5)+
geom_text_repel(show.legend = FALSE,aes(label = Abb1))+
#theme_minimal()+
theme_light()+
theme(legend.title=element_blank())+
labs(x=expression(bold("Relative Stock Status")),y=expression(bold("Fishing Intensity")))+
geom_vline(xintercept = c(0.5,0.62,1),lty=c(1,1,2),col=c("red","red","black"),lwd=c(1.25,1.25,1))+
geom_hline(yintercept = 1,lty=2)+
guides(shape = guide_legend(override.aes = list(size = 4)))+
geom_text(aes(1,1.5,color="black",label="TRP",angle=90,vjust=1.1,size=1.1))+
geom_text(aes(0.625,1.35,color="black",label="LRP: Rockfishes",angle=90,vjust=1,size=1.1))+
geom_text(aes(0.5,1.4,color="black",label="LRP: Flatfishes",angle=90,vjust=-0.1,size=1.1))
ggplot(quad.plot.WC,aes(B.Bmsy,F.Fmsy, label=Abb1,color=Spp_type,shape=Spp_type))+
geom_point()+
xlim(0,4)+
ylim(0,1.5)+
geom_text_repel(show.legend = FALSE,aes(label = Abb1))+
#theme_minimal()+
theme_light()+
theme(legend.title=element_blank())+
labs(x=expression(bold("Relative Stock Status")),y=expression(bold("Fishing Intensity")))+
geom_vline(xintercept = c(0.5,0.62,1),lty=c(1,1,2),col=c("red","red","black"),lwd=c(1.25,1.25,1))+
geom_hline(yintercept = 1,lty=2)+
guides(shape = guide_legend(override.aes = list(size = 4)))+
geom_text(aes(1,1.5,color="black",label="TRP",angle=90,vjust=1.1,size=1.1))+
ggplot(quad.plot.WC,aes(B.Bmsy,F.Fmsy, label=Abb1,color=Spp_type,shape=Spp_type))+
geom_point()+
xlim(0,4)+
ylim(0,1.5)+
geom_text_repel(show.legend = FALSE,aes(label = Abb1))+
#theme_minimal()+
theme_light()+
theme(legend.title=element_blank())+
labs(x=expression(bold("Relative Stock Status")),y=expression(bold("Fishing Intensity")))+
geom_vline(xintercept = c(0.5,0.62,1),lty=c(1,1,2),col=c("red","red","black"),lwd=c(1.25,1.25,1))+
geom_hline(yintercept = 1,lty=2)+
guides(shape = guide_legend(override.aes = list(size = 4)))+
geom_text(aes(1,1.5,color="black",label="TRP",angle=90,vjust=1.1,size=1.1))
ggplot(quad.plot.WC,aes(B.Bmsy,F.Fmsy, label=Abb1,color=Spp_type,shape=Spp_type))+
geom_point()+
xlim(0,4)+
ylim(0,1.5)+
geom_text_repel(show.legend = FALSE,aes(label = Abb1))+
#theme_minimal()+
theme_light()+
theme(legend.title=element_blank())+
labs(x=expression(bold("Relative Stock Status")),y=expression(bold("Fishing Intensity")))+
geom_vline(xintercept = c(0.5,0.62,1),lty=c(1,1,2),col=c("red","red","black"),lwd=c(1.25,1.25,1))+
geom_hline(yintercept = 1,lty=2)+
guides(shape = guide_legend(override.aes = list(size = 4)))+
geom_text(aes(1,1.5,color="black",label="TRP",angle=90,vjust=1.1,size=1.1))
ggplot(quad.plot.WC,aes(B.Bmsy,F.Fmsy, label=Abb1,color=Spp_type,shape=Spp_type))+
geom_point()+
xlim(0,4)+
ylim(0,1.5)+
geom_text_repel(show.legend = FALSE,aes(label = Abb1))+
#theme_minimal()+
theme_light()+
theme(legend.title=element_blank())+
labs(x=expression(bold("Relative Stock Status")),y=expression(bold("Fishing Intensity")))+
geom_vline(xintercept = c(0.5,0.62,1),lty=c(1,1,2),col=c("red","red","black"),lwd=c(1.25,1.25,1))+
geom_hline(yintercept = 1,lty=2)+
guides(shape = guide_legend(override.aes = list(size = 4)))
ggplot(quad.plot.WC,aes(B.Bmsy,F.Fmsy, label=Abb1,color=Spp_type,shape=Spp_type))+
geom_point()+
xlim(0,4)+
ylim(0,1.5)+
geom_text_repel(show.legend = FALSE,aes(label = Abb1))+
#theme_minimal()+
theme_light()+
theme(legend.title=element_blank())+
labs(x=expression(bold("Relative Stock Status")),y=expression(bold("Fishing Intensity")))+
geom_vline(xintercept = c(0.5,0.62,1),lty=c(1,1,2),col=c("red","red","black"),lwd=c(1.25,1.25,1))+
geom_hline(yintercept = 1,lty=2)+
guides(shape = guide_legend(override.aes = list(size = 4)))+
geom_text(aes(1,1.5,color="black",label="TRP",angle=90,vjust=1.1,size=1.1))+
theme(legend.title=element_blank())
ggplot(quad.plot.WC,aes(B.Bmsy,F.Fmsy, label=Abb1,color=Spp_type,shape=Spp_type))+
geom_point()+
xlim(0,4)+
ylim(0,1.5)+
geom_text_repel(show.legend = FALSE,aes(label = Abb1))+
#theme_minimal()+
theme_light()+
theme(legend.title=element_blank())+
labs(x=expression(bold("Relative Stock Status")),y=expression(bold("Fishing Intensity")))+
geom_vline(xintercept = c(0.5,0.62,1),lty=c(1,1,2),col=c("red","red","black"),lwd=c(1.25,1.25,1))+
geom_hline(yintercept = 1,lty=2)+
guides(shape = guide_legend(override.aes = list(size = 4)))+
geom_text(aes(1,1.5,color="black",label="TRP",angle=90,vjust=1.1,size=1.1))
ggplot(quad.plot.WC,aes(B.Bmsy,F.Fmsy, label=Abb1,color=Spp_type,shape=Spp_type))+
geom_point()+
xlim(0,4)+
ylim(0,1.5)+
geom_text_repel(show.legend = FALSE,aes(label = Abb1))+
#theme_minimal()+
theme_light()+
theme(legend.title=element_blank())+
labs(x=expression(bold("Relative Stock Status")),y=expression(bold("Fishing Intensity")))+
geom_vline(xintercept = c(0.5,0.62,1),lty=c(1,1,2),col=c("red","red","black"),lwd=c(1.25,1.25,1))+
geom_hline(yintercept = 1,lty=2)+
guides(shape = guide_legend(override.aes = list(size = 4)))
ggplot(quad.plot.WC,aes(B.Bmsy,F.Fmsy, label=Abb1,color=Spp_type,shape=Spp_type))+
geom_point()+
xlim(0,4)+
ylim(0,1.5)+
geom_text_repel(show.legend = FALSE,aes(label = Abb1))+
#theme_minimal()+
theme_light()+
theme(legend.title=element_blank())+
labs(x=expression(bold("Relative Stock Status")),y=expression(bold("Fishing Intensity")))+
geom_vline(xintercept = c(0.5,0.62,1),lty=c(1,1,1),col=c("red","red","black"),lwd=c(1.25,1.25,1))+
geom_hline(yintercept = 1,lty=2)+
guides(shape = guide_legend(override.aes = list(size = 4)))
ggplot(quad.plot.WC,aes(B.Bmsy,F.Fmsy, label=Abb1,color=Spp_type,shape=Spp_type))+
geom_point()+
xlim(0,4)+
ylim(0,1.5)+
geom_text_repel(show.legend = FALSE,aes(label = Abb1))+
#theme_minimal()+
theme_light()+
theme(legend.title=element_blank())+
labs(x=expression(bold("Relative Stock Status")),y=expression(bold("Fishing Intensity")))+
geom_vline(xintercept = c(0.5,0.62,1),lty=c(1,1,2),col=c("red","red","black"),lwd=c(1.25,1.25,1))+
geom_hline(yintercept = 1,lty=2)+
guides(shape = guide_legend(override.aes = list(size = 4)))
ggplot(quad.plot.WC,aes(B.Bmsy,F.Fmsy, label=Abb1,color=Spp_type,shape=Spp_type))+
geom_point()+
xlim(0,4)+
ylim(0,1.5)+
geom_text_repel(show.legend = FALSE,aes(label = Abb1))+
#theme_minimal()+
theme_light()+
theme(legend.title=element_blank())+
labs(x=expression(bold("Relative Stock Status")),y=expression(bold("Fishing Intensity")))+
geom_vline(xintercept = c(0.5,0.62,1),lty=c(1,1,2),col=c("red","red","black"),lwd=c(1.25,1.25,1))+
geom_hline(yintercept = 1,lty=2,lwd=1)+
guides(shape = guide_legend(override.aes = list(size = 4)))
ggplot(quad.plot.WC,aes(B.Bmsy,F.Fmsy, label=Abb1,color=Spp_type,shape=Spp_type))+
geom_point()+
xlim(0,4)+
ylim(0,1.5)+
geom_text_repel(show.legend = FALSE,aes(label = Abb1))+
#theme_minimal()+
theme_light()+
theme(legend.title=element_blank())+
labs(x=expression(bold("Relative Stock Status")),y=expression(bold("Fishing Intensity")))+
geom_vline(xintercept = c(0.5,0.62,1),lty=c(1,1,2),col=c("red","red","black"),lwd=c(1.25,1.25,0.5))+
geom_hline(yintercept = 1,lty=2,lwd=0.5)+
guides(shape = guide_legend(override.aes = list(size = 4)))
ggplot(quad.plot.WC,aes(B.Bmsy,F.Fmsy, label=Abb1,color=Spp_type,shape=Spp_type))+
geom_point(color=c("purple","green","blue"))+
xlim(0,4)+
ylim(0,1.5)+
geom_text_repel(show.legend = FALSE,aes(label = Abb1))+
#theme_minimal()+
theme_light()+
theme(legend.title=element_blank())+
labs(x=expression(bold("Relative Stock Status")),y=expression(bold("Fishing Intensity")))+
geom_vline(xintercept = c(0.5,0.62,1),lty=c(1,1,2),col=c("red","red","black"),lwd=c(1.25,1.25,0.5))+
geom_hline(yintercept = 1,lty=2,lwd=0.5)+
guides(shape = guide_legend(override.aes = list(size = 4)))
ggplot(quad.plot.WC,aes(B.Bmsy,F.Fmsy, label=Abb1,color=Spp_type,shape=Spp_type))+
geom_point()+
scale_fill_manual(values = =c("purple","green","blue"))+
xlim(0,4)+
ylim(0,1.5)+
geom_text_repel(show.legend = FALSE,aes(label = Abb1))+
#theme_minimal()+
theme_light()+
theme(legend.title=element_blank())+
labs(x=expression(bold("Relative Stock Status")),y=expression(bold("Fishing Intensity")))+
geom_vline(xintercept = c(0.5,0.62,1),lty=c(1,1,2),col=c("red","red","black"),lwd=c(1.25,1.25,0.5))+
geom_hline(yintercept = 1,lty=2,lwd=0.5)+
guides(shape = guide_legend(override.aes = list(size = 4)))
?scale_fill_manual
ggplot(quad.plot.WC,aes(B.Bmsy,F.Fmsy, label=Abb1,color=Spp_type,shape=Spp_type))+
geom_point()+
scale_color_manual(values=c("purple","green","blue"))+
xlim(0,4)+
ylim(0,1.5)+
geom_text_repel(show.legend = FALSE,aes(label = Abb1))+
#theme_minimal()+
theme_light()+
theme(legend.title=element_blank())+
labs(x=expression(bold("Relative Stock Status")),y=expression(bold("Fishing Intensity")))+
geom_vline(xintercept = c(0.5,0.62,1),lty=c(1,1,2),col=c("red","red","black"),lwd=c(1.25,1.25,0.5))+
geom_hline(yintercept = 1,lty=2,lwd=0.5)+
guides(shape = guide_legend(override.aes = list(size = 4)))
ggplot(quad.plot.WC,aes(B.Bmsy,F.Fmsy, label=Abb1,color=Spp_type,shape=Spp_type))+
geom_point()+
scale_color_manual(values=c("black","darkgreen","blue"))+
xlim(0,4)+
ylim(0,1.5)+
geom_text_repel(show.legend = FALSE,aes(label = Abb1))+
#theme_minimal()+
theme_light()+
theme(legend.title=element_blank())+
labs(x=expression(bold("Relative Stock Status")),y=expression(bold("Fishing Intensity")))+
geom_vline(xintercept = c(0.5,0.62,1),lty=c(1,1,2),col=c("red","red","black"),lwd=c(1.25,1.25,0.5))+
geom_hline(yintercept = 1,lty=2,lwd=0.5)+
guides(shape = guide_legend(override.aes = list(size = 4)))
ggplot(quad.plot.WC,aes(B.Bmsy,F.Fmsy, label=Abb1,color=Spp_type,shape=Spp_type))+
geom_point()+
scale_color_manual(values=c("darkorange","darkgreen","blue"))+
xlim(0,4)+
ylim(0,1.5)+
geom_text_repel(show.legend = FALSE,aes(label = Abb1))+
#theme_minimal()+
theme_light()+
theme(legend.title=element_blank())+
labs(x=expression(bold("Relative Stock Status")),y=expression(bold("Fishing Intensity")))+
geom_vline(xintercept = c(0.5,0.62,1),lty=c(1,1,2),col=c("red","red","black"),lwd=c(1.25,1.25,0.5))+
geom_hline(yintercept = 1,lty=2,lwd=0.5)+
guides(shape = guide_legend(override.aes = list(size = 4)))
?geom_text
M.empirical
?M.empirical
(3*0.15)/(exp(0.15*((0.302 * 55)-0))-1)
(3*0.10)/(exp(0.15*((0.302 * 55)-0))-1)
(3*0.10)/(exp(0.10*((0.302 * 55)-0))-1)
(3*0.10)/(exp(0.10*((0.302 * 60)-0))-1)
(3*0.10)/(exp(0.10*((0.302 * 50)-0))-1)
(3*0.10)/(exp(0.10*((0.302 * 50)--1))-1)
(3*0.10)/(exp(0.10*((0.302 * 50)--2))-1)
(3*0.10)/(exp(0.10*((0.302 * 50)-1))-1)
(3*0.10)/(exp(0.10*((0.302 * 60)-0))-1)
(3*0.10)/(exp(0.10*((0. * 60)-0))-1)
(3*0.10)/(exp(0.10*((0.44 * 60)-0))-1)
(3*0.33)/(exp(0.33*((0.302 * 25)--1.66))-1)
(3.033*0.33)/(exp(0.33*((0.302 * 25)--1.66))-1)
runApp('Github/Natural-Mortality-Tool')
runApp('Github/Natural-Mortality-Tool')
runApp('Github/Natural-Mortality-Tool')
runApp('Github/Natural-Mortality-Tool')
runApp('Github/Natural-Mortality-Tool')
runApp('Github/Natural-Mortality-Tool')
runApp('Github/Natural-Mortality-Tool')
runApp('Github/Natural-Mortality-Tool')
shiny::runApp('Github/VBGF_IGOR/Shiny_IGOR')
Sys.getenv("PATH")
shiny::runApp('Github/VBGF_IGOR/Shiny_IGOR')
install.packages(c("ca", "devtools", "digest", "farver", "flextable", "gnm", "officer", "qvcalc", "rlang", "vcd"))
install.packages(c("BH", "bit", "boot", "broom", "callr", "car", "caTools", "checkmate", "chron", "cli", "copula", "dendextend", "DescTools", "devtools", "digest", "dplyr", "DT", "dtplyr", "FactoMineR", "fansi", "fields", "forcats", "foreach", "foreign", "fpc", "FSA", "ggpubr", "gh", "gplots", "hexbin", "Hmisc", "hms", "jsonlite", "knitr", "lattice", "latticeExtra", "leaps", "manipulateWidget", "MASS", "mime", "modelr", "msm", "mvtnorm", "nlme", "nloptr", "nnet", "pbkrtest", "pillar", "plotly", "prabclus", "prettyunits", "processx", "ps", "purrr", "Rcpp", "RcppArmadillo", "RCurl", "remotes", "rgl", "RJSONIO", "rlang", "rmarkdown", "rstudioapi", "sciplot", "shinycssloaders", "shinyjs", "sp", "SparseM", "stringi", "testthat", "tidyr", "tidyselect", "tinytex", "TMB", "trimcluster", "TropFishR", "uuid", "vctrs", "xfun", "xts", "yaml", "ypr", "zoo"), lib="C:/Program Files/R/R-3.6.1/library")
install.packages(c("BH", "bit", "boot", "broom", "callr", "car", "caTools", "checkmate", "chron", "cli", "copula", "dendextend", "DescTools", "devtools", "digest", "dplyr", "DT", "dtplyr", "FactoMineR", "fansi", "fields", "forcats", "foreach", "foreign", "fpc", "FSA", "ggpubr", "gh", "gplots", "hexbin", "Hmisc", "hms", "jsonlite", "knitr", "lattice", "latticeExtra", "leaps", "manipulateWidget", "MASS", "mime", "modelr", "msm", "mvtnorm", "nlme", "nloptr", "nnet", "pbkrtest", "pillar", "plotly", "prabclus", "prettyunits", "processx", "ps", "purrr", "Rcpp", "RcppArmadillo", "RCurl", "remotes", "rgl", "RJSONIO", "rlang", "rmarkdown", "rstudioapi", "sciplot", "shinycssloaders", "shinyjs", "sp", "SparseM", "stringi", "testthat", "tidyr", "tidyselect", "tinytex", "TMB", "trimcluster", "TropFishR", "uuid", "vctrs", "xfun", "xts", "yaml", "ypr", "zoo"), lib = "C:/Program Files/R/R-3.6.1/library")
install.packages(c("BH", "bit", "boot", "broom", "callr", "car", "caTools", "checkmate", "chron", "cli", "copula", "dendextend", "DescTools", "devtools", "digest", "dplyr", "DT", "dtplyr", "FactoMineR", "fansi", "fields", "forcats", "foreach", "foreign", "fpc", "FSA", "ggpubr", "gh", "gplots", "hexbin", "Hmisc", "hms", "jsonlite", "knitr", "lattice", "latticeExtra", "leaps", "manipulateWidget", "MASS", "mime", "modelr", "msm", "mvtnorm", "nlme", "nloptr", "nnet", "pbkrtest", "pillar", "plotly", "prabclus", "prettyunits", "processx", "ps", "purrr", "Rcpp", "RcppArmadillo", "RCurl", "remotes", "rgl", "RJSONIO", "rlang", "rmarkdown", "rstudioapi", "sciplot", "shinycssloaders", "shinyjs", "sp", "SparseM", "stringi", "testthat", "tidyr", "tidyselect", "tinytex", "TMB", "trimcluster", "TropFishR", "uuid", "vctrs", "xfun", "xts", "yaml", "ypr", "zoo"), lib = "C:/Program Files/R/R-3.6.1/library")
install.packages(c("BH", "bit", "boot", "broom", "callr", "car", "caTools", "checkmate", "chron", "cli", "copula", "dendextend", "DescTools", "devtools", "digest", "dplyr", "DT", "dtplyr", "FactoMineR", "fansi", "fields", "forcats", "foreach", "foreign", "fpc", "FSA", "ggpubr", "gh", "gplots", "hexbin", "Hmisc", "hms", "jsonlite", "knitr", "lattice", "latticeExtra", "leaps", "manipulateWidget", "MASS", "mime", "modelr", "msm", "mvtnorm", "nlme", "nloptr", "nnet", "pbkrtest", "pillar", "plotly", "prabclus", "prettyunits", "processx", "ps", "purrr", "Rcpp", "RcppArmadillo", "RCurl", "remotes", "rgl", "RJSONIO", "rlang", "rmarkdown", "rstudioapi", "sciplot", "shinycssloaders", "shinyjs", "sp", "SparseM", "stringi", "testthat", "tidyr", "tidyselect", "tinytex", "TMB", "trimcluster", "TropFishR", "uuid", "vctrs", "xfun", "xts", "yaml", "ypr", "zoo"), lib = "C:/Program Files/R/R-3.6.1/library")
shiny::runApp('Github/VBGF_IGOR/Shiny_IGOR')
install.packages("rlang")
install.packages(c("broom", "lattice", "nloptr", "nnet", "rlang"), lib="C:/Users/Jason.Cope/Documents/R/R-3.6.3/library")
shiny::runApp('Github/VBGF_IGOR/Shiny_IGOR')
shiny::runApp('Github/VBGF_IGOR/Shiny_IGOR')
compile("tmb_models/logistic_Gamma.cpp")
getwd()
compile(C:/Users/Jason.Cope/Documents/Github/VBGF_IGOR/Shiny_IGOR/tmb_models/logistic_Gamma.cpp")
compile("C:/Users/Jason.Cope/Documents/Github/VBGF_IGOR/Shiny_IGOR/tmb_models/logistic_Gamma.cpp")
Sys.getenv("PATH")
Sys.getenv("PATH")
Sys.getenv("PATH")
Sys.getenv("PATH")
quad.plot.WC<-data.frame(read.csv("C:/Users/Jason.Cope/Desktop/WC_quadplot_2019.csv"))
ggplot(quad.plot.WC,aes(B.Bmsy,F.Fmsy, label=Abb1,color=Spp_type,shape=Spp_type))+
geom_point()+
scale_color_manual(values=c("darkorange","darkgreen","blue"))+
xlim(0,4)+
ylim(0,1.5)+
geom_text_repel(show.legend = FALSE,aes(label = Abb1))+
#theme_minimal()+
theme_light()+
theme(legend.title=element_blank())+
labs(x=expression(bold("Relative Stock Status")),y=expression(bold("Fishing Intensity")))+
geom_vline(xintercept = c(0.5,0.62,1),lty=c(1,1,2),col=c("red","red","black"),lwd=c(1.25,1.25,0.5))+
geom_hline(yintercept = 1,lty=2,lwd=0.5)+
guides(shape = guide_legend(override.aes = list(size = 4)))
#geom_text(aes(1,1.5,color="black",label="TRP",angle=90,vjust=1.1,size=1.1))
#geom_text(aes(0.625,1.35,color="black",label="LRP: Rockfishes",angle=90,vjust=1,size=1.1))+
#geom_text(aes(0.5,1.4,color="black",label="LRP: Flatfishes",angle=90,vjust=-0.1,size=1.1))
library(calibrate)
library(gplots)
library(fields)
library(ggrepel)
library(ggplot2)
ggplot(quad.plot.WC,aes(B.Bmsy,F.Fmsy, label=Abb1,color=Spp_type,shape=Spp_type))+
geom_point()+
scale_color_manual(values=c("darkorange","darkgreen","blue"))+
xlim(0,4)+
ylim(0,1.5)+
geom_text_repel(show.legend = FALSE,aes(label = Abb1))+
#theme_minimal()+
theme_light()+
theme(legend.title=element_blank())+
labs(x=expression(bold("Relative Stock Status")),y=expression(bold("Fishing Intensity")))+
geom_vline(xintercept = c(0.5,0.62,1),lty=c(1,1,2),col=c("red","red","black"),lwd=c(1.25,1.25,0.5))+
geom_hline(yintercept = 1,lty=2,lwd=0.5)+
guides(shape = guide_legend(override.aes = list(size = 4)))
#geom_text(aes(1,1.5,color="black",label="TRP",angle=90,vjust=1.1,size=1.1))
#geom_text(aes(0.625,1.35,color="black",label="LRP: Rockfishes",angle=90,vjust=1,size=1.1))+
#geom_text(aes(0.5,1.4,color="black",label="LRP: Flatfishes",angle=90,vjust=-0.1,size=1.1))
?runGithub
?runGitHub
require(shiny)
?runGitHub
runGitHub("https://github.com/shcaba/VBGF_IGOR/tree/master/Shiny_IGOR")
runGitHub("Shiny_IGOR","shcaba")
runGitHub("VBGF_IGOR/tree/master/Shiny_IGOR","shcaba")
runGitHub("Shiny_IGOR","shcaba")
runApp('Github/VBGF_IGOR/Shiny_IGOR')
library(shiny)
runGitHub("Shiny_IGOR","shcaba")
runApp('Github/Natural-Mortality-Tool')
runGitHub("Shiny_IGOR","shcaba")
runGitHub("Shiny_IGOR","shcaba")
runGitHub("Shiny_IGOR","shcaba")
runApp('Github/VBGF_IGOR/Shiny_IGOR')
mapply(function(x) (x+1)/2^x,x=1:10, SIMPLIFY=TRUE)
runApp('Github/VBGF_IGOR/Shiny_IGOR')
runApp('Github/VBGF_IGOR/Shiny_IGOR')
Sys.getenv("PATH")
Sys.getenv("PATH")
Sys.getenv("PATH")
log(0.5)
remove.packages("r4ss", lib="~/R/R-3.6.3/library")
remove.packages("r4ss", lib="~/R/win-library/3.6")
install.packages("r4ss")
library(r4ss)
SS_readdat("C:/Users/Jason.Cope/Documents/Github/SS-DL-tool/SS_LB_files/SS_LB.dat")
remotes::install_github("r4ss/r4ss")
library(r4ss)
SS_readdat("C:/Users/Jason.Cope/Documents/Github/SS-DL-tool/SS_LB_files/SS_LB.dat")
SS_readdat("C:/Users/Jason.Cope/Documents/Github/SS-DL-tool/SS_LB_files/SS_LB.dat")
SS_readdat("C:/Users/Jason.Cope/Desktop/sss_petrale/2019_petrale.dat")
remotes::install_github('r4ss/r4ss@development')
library(r4ss)
SS_readdat("C:/Users/Jason.Cope/Documents/Github/SS-DL-tool/SS_LB_files/SS_LB.dat")
remove.packages("r4ss", lib="~/R/win-library/3.6")
remotes::install_github('r4ss/r4ss@development')
library(r4ss)
SS_readdat("C:/Users/Jason.Cope/Documents/Github/SS-DL-tool/SS_LB_files/SS_LB.dat")
library(r4ss)
SS_readdat("C:/Users/Jason.Cope/Documents/Github/SS-DL-tool/SS_LB_files/SS_LB.dat")
shiny::runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
?req
?req
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
input$M_m
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
remotes::install_github('r4ss/r4ss@development')
runApp('Github/SS-DL-tool')
shiny::runApp('Github/SS-DL-tool')
shiny::runApp('Github/SS-DL-tool')
shiny::runApp('Github/SS-DL-tool')
shiny::runApp('Github/SS-DL-tool')
shiny::runApp('Github/SS-DL-tool')
shiny::runApp('Github/SS-DL-tool')
shiny::runApp('Github/SS-DL-tool')
shiny::runApp('Github/SS-DL-tool')
profilesummary
jitter.likes
plot(1:length(jitter.likes),jitter.likes,type="p",col="black",bg="blue",pch=21,xlab="Jitter run",ylab="-log likelihood value")
1:length(jitter.likes)
jitter.likes
jitterplot<-plot(c(1:length(jitter.likes)),jitter.likes,type="p",col="black",bg="blue",pch=21,xlab="Jitter run",ylab="-log likelihood value")
print(plot(c(1:length(jitter.likes)),jitter.likes))
class(jitter.likes)
jitter.likes[,1]
jitter.likes[1,]
jitter.likes
as.numeric(jitter.likes)
jitter.likes[-length(jitter.likes)]
shiny::runApp('Github/SS-DL-tool')
shiny::runApp('Github/SS-DL-tool')
shiny::runApp('Github/SS-DL-tool')
ref.like
shiny::runApp('Github/SS-DL-tool')
shiny::runApp('Github/SS-DL-tool')
shiny::runApp('Github/SS-DL-tool')
shiny::runApp('Github/SS-DL-tool')
shiny::runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
?exist
?exists
?exists
runApp('Github/SS-DL-tool')
Njitter
exists(Njitter)
input$Njitter
exists(input$Njitter)
input$Njitter==NULL
input$Njitter==NULL
exists("input$Njitter")
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
exists("input$Njitter")
input$Njitter>1
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
nrow(Age.comp.data)
Age.comp.data[,1]
Age.comp.data[,1]
Age.comp.data[,1]
as.numeric(colnames(Age.comp.data)[-1])
colSums(Age.comp.data[-1])
t(Age.comp.data)[-1,]
Age.comp.data[-1,]
Age.comp.data[,-1]
t(Age.comp.data)[-1,]
age.samp.yrs
data.file$agecomp
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
data.file$ageerror
class(data.file$ageerror)
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
data.file$ageerror
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
data.file$ageerror
runApp('Github/SS-DL-tool')
shiny::runApp('Github/SS-DL-tool')
shiny::runApp('Github/SS-DL-tool')
shiny::runApp('Github/SS-DL-tool')
shiny::runApp('Github/SS-DL-tool')
shiny::runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
library(shiny)
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
