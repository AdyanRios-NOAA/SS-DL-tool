install.packages(c("admisc", "antiword", "arkdb", "bayesplot", "bbmle", "BH", "bindrcpp", "bookdown", "boot", "brew", "brio", "bslib", "Cairo", "callr", "checkmate", "cli", "cluster", "coda", "commonmark", "copula", "covr", "cowplot", "cpp11", "crosstalk", "curl", "data.table", "datamods", "datawizard", "DBI", "deldir", "desc", "descr", "DescTools", "deSolve", "DiagrammeR", "digest", "diptest", "distributional", "dotCall64", "dplyr", "DT", "duckdb", "e1071", "emmeans", "esquisse", "estimability", "evaluate", "expm", "fansi", "fastICA", "fBasics", "ff", "fGarch", "filelock", "float", "fmesher", "fmsb", "FNN", "foreign", "fpc", "fracdiff", "future", "future.apply", "GA", "gbm", "gdtools", "GenSA", "gert", "GGally", "gganimate", "ggdist", "ggeffects", "ggforce", "ggfun", "gghighlight", "ggiraph", "ggm", "ggnewscale", "ggplot2", "ggraph", "ggrepel", "ggridges", "ggthemes", "git2r", "glue", "GPArotation", "gplots", "graphlayouts", "gt", "gtools", "h2o", "hardhat", "haven", "htmltools", "ht
mlwidgets", "httpuv", "httr2", "igraph", "insight", "interp", "ISOcodes", "jsonlite", "kableExtra", "ks", "lares", "later", "lattice", "lava", "lavaan", "LiblineaR", "lifecycle", "lintr", "lisrelToR", "listenv", "lme4", "loo", "lpSolve", "magick", "maps", "markdown", "MASS", "Matrix", "MatrixExtra", "MatrixModels", "matrixStats", "mclust", "mcmc", "MCMCpack", "memisc", "mgcv", "MSEtool", "msm", "multicool", "mvtnorm", "network", "nleqslv", "nlme", "nlstools", "officer", "OpenMx", "pak", "paletteer", "parallelly", "patchwork", "pcaPP", "phylobase", "phylosem", "pkgbuild", "pkgcache", "pkgdepends", "pkgload", "plot3D", "plotly", "plotrix", "pracma", "pROC", "processx", "progress", "ps", "pscl", "psych", "qgraph", "quanteda.textplots", "quanteda.textstats", "quantmod", "QuickJSR", "R.devices", "R.oo", "R.rsp", "R.utils", "R2jags", "R2WinBUGS", "ragg", "rainbow", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "Rdpack", "readr", "recipes", "renv", "reprex", "reticulate", "rfishbase", "rgl"
, "Rglpk", "rjags", "rJava", "RJSONIO", "rlang", "rnaturalearth", "robustbase", "RODBC", "roxygen2", "rpart", "rpart.plot", "rprojroot", "rrcov", "rsconnect", "RSQLite", "rstan", "rstanarm", "rstantools", "rticles", "Rtsne", "RUnit", "rvest", "s2", "sandwich", "sass", "scales", "sdmTMB", "segmented", "seqinr", "servr", "sets", "sf", "shape", "shiny", "shinybusy", "shinyWidgets", "sna", "snowfall", "sp", "spacyr", "spdep", "StanHeaders", "stm", "stringi", "stringr", "survival", "svglite", "TeachingDemos", "tensorA", "terra", "tesseract", "testthat", "text2vec", "tidygraph", "tidyr", "timechange", "timeDate", "timeSeries", "tinytex", "TMB", "tmvtnorm", "topicmodels", "transformr", "tseries", "TTR", "tweenr", "units", "usethis", "uuid", "V8", "vcd", "vctrs", "viridis", "vroom", "waldo", "wesanderson", "withr", "wk", "writexl", "xfun", "XML", "xml2", "xts", "yaml", "yulab.utils", "zip"))
install.packages("RcppEigen")
install.packages("deldir")
install.packages(c("ggraph", "RcppEigen"))
shiny::runApp('Github/SS-DL-tool')
OR.tsc<-SS_output("C:/Users/Jason.Cope/Documents/Github/Sebastes_melanops_OR/Document/models/Reference model")
TSCplot(OR.tsc)
shiny::runApp('Github/SS-DL-tool')
qlnorm(.45,0.2)
qlnorm(.45,0,0.2)
qlnorm(.45,0,2)
shiny::runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
Q
runApp('Github/SS-DL-tool')
Lt.dat.plot$fleet
Lt.dat.plot
Lt.dat.plot<-rv.Lt$data
Lt.dat.plot
dim(Lt.dat.plot)
cumsum(Lt.dat.plot[,6:28])
cumsum(Lt.dat.plot[1,6:28])
Lt.dat.plot[1,6:28]
cumsum(as.numeric(Lt.dat.plot[1,6:28]))
cumsum(as.numeric(Lt.dat.plot[1,6:ncol(Lt.dat.plot)]))
cumsum(as.numeric(Lt.dat.plot[1,6:ncol(Lt.dat.plot)]))/sum(cumsum(as.numeric(Lt.dat.plot[1,6:ncol(Lt.dat.plot)])))
cumsum(as.numeric(Lt.dat.plot[1,6:ncol(Lt.dat.plot)]))/sum(as.numeric(Lt.dat.plot[1,6:ncol(Lt.dat.plot)]))
plot(cumsum(as.numeric(Lt.dat.plot[1,6:ncol(Lt.dat.plot)]))/sum(as.numeric(Lt.dat.plot[1,6:ncol(Lt.dat.plot)])))
ecdf(Lt.dat.plot[1,6:28])
?ecdf
ecdf(as.numeric(Lt.dat.plot[1,6:28]))
xx<-ecdf(as.numeric(Lt.dat.plot[1,6:28]))
xx(0.5)
plot(xx)
rnorm(12
)
xx(5)
cumsum(as.numeric(Lt.dat.plot[1,6:ncol(Lt.dat.plot)]))/sum(as.numeric(Lt.dat.plot[1,6:ncol(Lt.dat.plot)]))
xx(1)
xx(2)
xx(6)
xx(-2)
xx(0)
xx(-1)
quantile(xx)
data.frame(score=c(rnorm(130,40,10), rnorm(130,80,5)))
dat = data.frame(score=c(rnorm(130,40,10), rnorm(130,80,5)))
dat
dat.binned = dat %>% count(Marks=cut(score,seq(0,100,5))) %>%
mutate(pct = n/sum(n))
dat.binned
cumsum(as.numeric(Lt.dat.plot[1,6:ncol(Lt.dat.plot)]))/sum(as.numeric(Lt.dat.plot[1,6:ncol(Lt.dat.plot)]))
cumsum(as.numeric(Lt.dat.plot[,6:ncol(Lt.dat.plot)]))/sum(as.numeric(Lt.dat.plot[,6:ncol(Lt.dat.plot)]))
mapply(function(x),cumsum(as.numeric(Lt.dat.plot[x,6:ncol(Lt.dat.plot)]))/sum(as.numeric(Lt.dat.plot[x,6:ncol(Lt.dat.plot)])),x=1:nrow(Lt.dat.plot))
mapply(function(x),cumsum(as.numeric(Lt.dat.plot[x,6:ncol(Lt.dat.plot)]))/sum(as.numeric(Lt.dat.plot[x,6:ncol(Lt.dat.plot)])),x=1:nrow(Lt.dat.plot),SIMPLIFY=TRUE)
mapply(function(x)cumsum(as.numeric(Lt.dat.plot[x,6:ncol(Lt.dat.plot)]))/sum(as.numeric(Lt.dat.plot[x,6:ncol(Lt.dat.plot)])),x=1:nrow(Lt.dat.plot),SIMPLIFY=TRUE)
mapply(function(x)cumsum(as.numeric(Lt.dat.plot[x,6:ncol(Lt.dat.plot)]))/sum(as.numeric(Lt.dat.plot[x,6:ncol(Lt.dat.plot)])),x=1:nrow(Lt.dat.plot),SIMPLIFY=FALSE)
mapply(function(x)cumsum(as.numeric(Lt.dat.plot[x,6:ncol(Lt.dat.plot)]))/sum(as.numeric(Lt.dat.plot[x,6:ncol(Lt.dat.plot)])),x=1:nrow(Lt.dat.plot),SIMPLIFY=TRUE)
t(mapply(function(x)cumsum(as.numeric(Lt.dat.plot[x,6:ncol(Lt.dat.plot)]))/sum(as.numeric(Lt.dat.plot[x,6:ncol(Ltt.dat.plot)])),x=1:nrow(Lt.dat.plot),SIMPLIFY=TRUE))
mapply(function(x)cumsum(as.numeric(Lt.dat.plot[x,6:ncol(Lt.dat.plot)]))/sum(as.numeric(Lt.dat.plot[x,6:ncol(Lt.dat.plot)])),x=1:nrow(Lt.dat.plot),SIMPLIFY=TRUE)
t(mapply(function(x)cumsum(as.numeric(Lt.dat.plot[x,6:ncol(Lt.dat.plot)]))/sum(as.numeric(Lt.dat.plot[x,6:ncol(Lt.dat.plot)])),x=1:nrow(Lt.dat.plot),SIMPLIFY=TRUE))
plot(cumsum(as.numeric(Lt.dat.plot[1,6:ncol(Lt.dat.plot)]))/sum(as.numeric(Lt.dat.plot[1,6:ncol(Lt.dat.plot)])))
cumsum(as.numeric(Lt.dat.plot[1,6:ncol(Lt.dat.plot)]))/sum(as.numeric(Lt.dat.plot[1,6:ncol(Lt.dat.plot)]))
t(mapply(function(x)cumsum(as.numeric(Lt.dat.plot[x,6:ncol(Lt.dat.plot)]))/sum(as.numeric(Lt.dat.plot[x,6:ncol(Lt.dat.plot)])),x=1:nrow(Lt.dat.plot),SIMPLIFY=TRUE))
out.cdf<-t(mapply(function(x)cumsum(as.numeric(Lt.dat.plot[x,6:ncol(Lt.dat.plot)]))/sum(as.numeric(Lt.dat.plot[x,6:ncol(Lt.dat.plot)])),x=1:nrow(Lt.dat.plot),SIMPLIFY=TRUE))
ecdf(out.cdf)
ecdf(out.cdf[1,])
quantile(ecdf(out.cdf[1,],0.5)
)
quantile(ecdf(out.cdf[1,]),0.5)
quantile(ecdf(out.cdf[1,]),0.75)
quantile(ecdf(out.cdf[1,]),c(0,0.25,0.5,0.75)
)
quantile(ecdf(as.numeric(Lt.dat.plot[x,6:ncol(Lt.dat.plot)])),0.5)
ecdf(as.numeric(Lt.dat.plot[x,6:ncol(Lt.dat.plot)]))
ecdf(as.numeric(Lt.dat.plot[1,6:ncol(Lt.dat.plot)]))
quantile(ecdf(as.numeric(Lt.dat.plot[1,6:ncol(Lt.dat.plot)])),0.5)
quantile(ecdf(as.numeric(Lt.dat.plot[1,6:ncol(Lt.dat.plot)])),0.75)
plot(ecdf(out.cdf[1,]))
dat
plot(ecdf(dat$score))
quantile(plot(ecdf(dat$score)),0.5)
max(dat$score)
quantile(ecdf(as.numeric(Lt.dat.plot[1,6:ncol(Lt.dat.plot)])),0.75)
mode(as.numeric(Lt.dat.plot[1,6:ncol(Lt.dat.plot)]))
hist(as.numeric(Lt.dat.plot[1,6:ncol(Lt.dat.plot)]))
as.numeric(Lt.dat.plot[1,6:ncol(Lt.dat.plot)])
as.numeric(Lt.dat.plot[1,6:ncol(Lt.dat.plot)])
as.numeric(Lt.dat.plot[1,6:ncol(Lt.dat.plot)])==max(as.numeric(Lt.dat.plot[1,6:ncol(Lt.dat.plot)]))
pp<-as.numeric(Lt.dat.plot[1,6:ncol(Lt.dat.plot)])==max(as.numeric(Lt.dat.plot[1,6:ncol(Lt.dat.plot)]))
pp[1]
Lt.dat.plot[1,6:ncol(Lt.dat.plot)]
rownames(Lt.dat.plot[1,6:ncol(Lt.dat.plot)])
colnames(Lt.dat.plot[1,6:ncol(Lt.dat.plot)])
as.numeric(colnames(Lt.dat.plot[1,6:ncol(Lt.dat.plot)]))
lt.bins.freq<-Lt.dat.plot[1,6:ncol(Lt.dat.plot)]
as.numeric(colnames(lt.bins.freq))
mode<-mapply(function(x) as.numeric(lt.bins.freq[x,]])==max(as.numeric(lt.bins.freq[x,])),x=1:nrow(lt.bins.freq))
mode<-mapply(function(x) as.numeric(lt.bins.freq[x,])==max(as.numeric(lt.bins.freq[x,])),x=1:nrow(lt.bins.freq))
mode
lt.bins.out<-as.numeric(colnames(lt.bins.freq))
mode<-mapply(function(x) lt.bins.out(as.numeric(lt.bins.freq[x,])==max(as.numeric(lt.bins.freq[x,]))[1]),x=1:nrow(lt.bins.freq))
mode<-mapply(function(x) lt.bins.out[as.numeric(lt.bins.freq[x,])==max(as.numeric(lt.bins.freq[x,])][1]),x=1:nrow(lt.bins.freq))
pp[1]
as.numeric(colnames(Lt.dat.plot[1,6:ncol(Lt.dat.plot)]))
mode<-mapply(function(x) lt.bins.out[as.numeric(lt.bins.freq[x,])==max(as.numeric(lt.bins.freq[x,])[1]]),x=1:nrow(lt.bins.freq))
mode<-mapply(function(x) lt.bins.out[as.numeric(lt.bins.freq[x,])==max(as.numeric(lt.bins.freq[x,])[1]),x=1:nrow(lt.bins.freq))
mode<-mapply(function(x) as.numeric(lt.bins.freq[x,])==max(as.numeric(lt.bins.freq[x,])),x=1:nrow(lt.bins.freq))
mode
nrow(lt.bins.freq)
lt.bins.freq
lt.bins.freq<-Lt.dat.plot[,6:ncol(Lt.dat.plot)]
lt.bins.out<-as.numeric(colnames(lt.bins.freq))
runApp('Github/SS-DL-tool')
lt.bins.freq<-Lt.dat.plot[,6:ncol(Lt.dat.plot)]
lt.bins.freq<-Lt.dat.plot[,6:ncol(Lt.dat.plot)]
Lt.dat.sel<-rv.Lt$data
lt.bins.freq<-Lt.dat.sel[,6:ncol(Lt.dat.sel)]
lt.bins.out<-as.numeric(colnames(lt.bins.freq))
mode<-mapply(function(x) as.numeric(lt.bins.freq[x,])==max(as.numeric(lt.bins.freq[x,])),x=1:nrow(lt.bins.freq))
mode
lt.bins.out[as.numeric(lt.bins.freq[x,])==max(as.numeric(lt.bins.freq[x,])][1]
lt.bins.out[as.numeric(lt.bins.freq[x,])==max(as.numeric(lt.bins.freq[x,])]
lt.bins.out[as.numeric(lt.bins.freq[1,])==max(as.numeric(lt.bins.freq[1,])]
as.numeric(lt.bins.freq[1,])==max(as.numeric(lt.bins.freq[1,])
)
as.numeric(lt.bins.freq[1,])==max(as.numeric(lt.bins.freq[1,]))
lt.bins.out[as.numeric(lt.bins.freq[1,])==max(as.numeric(lt.bins.freq[1,]))]
lt.bins.out[as.numeric(lt.bins.freq[1,])==max(as.numeric(lt.bins.freq[1,]))][1]
mode<-mapply(function(x) lt.bins.out[as.numeric(lt.bins.freq[x,])==max(as.numeric(lt.bins.freq[x,]))][1],x=1:nrow(lt.bins.freq))
mode
as.numeric(lt.bins.freq[1,])==max(as.numeric(lt.bins.freq[1,]))
as.numeric(lt.bins.freq[1,])
mode
average(mode)
mean(mode)
median(mode)
hist(mode)
mode.out<-mapply(function(x) lt.bins.out[as.numeric(lt.bins.freq[x,])==max(as.numeric(lt.bins.freq[x,]))][1],x=1:nrow(lt.bins.freq))
mode.out
Sel50.out<-mapply(function(x) lt.bins.out[as.numeric(lt.bins.freq[x,])>0][1],x=1:nrow(lt.bins.freq))
Sel50.out
(Sel50.out+mode.out)/2
head(Lt.dat.sel)
head(Lt.dat.sel)
test.dat<-Lt.dat.sel[,1:5]
test.dat$Sel50<-(Sel50.out+mode.out)/2
test.dat$Sel95<-mode.out
test.dat
t(mapply(function(x)cumsum(as.numeric(Lt.dat.plot[x,6:ncol(Lt.dat.plot)]))/sum(as.numeric(Lt.dat.plot[x,6:ncol(Lt.dat.plot)])),x=1:nrow(Lt.dat.plot),SIMPLIFY=TRUE))
Lt.dat.sel<-rv.Lt$data
lt.bins.freq<-Lt.dat.sel[,6:ncol(Lt.dat.sel)]
lt.bins.out<-as.numeric(colnames(lt.bins.freq))
Sel_mode.out<-mapply(function(x) lt.bins.out[as.numeric(lt.bins.freq[x,])==max(as.numeric(lt.bins.freq[x,]))][1],x=1:nrow(lt.bins.freq))
Sel_init.out<-mapply(function(x) lt.bins.out[as.numeric(lt.bins.freq[x,])>0][1],x=1:nrow(lt.bins.freq))
lt.bins.sels<-Lt.dat.sel[,1:5]
lt.bins.sels$Sel50<-(Sel_init.out+Sel_mode.out)/2
lt.bins.sels$Sel95<-Sel_mode.out
Q
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
Lt.dat.sel<-rv.Lt$data
lt.bins.freq<-Lt.dat.sel[,6:ncol(Lt.dat.sel)]
lt.bins.out<-as.numeric(colnames(lt.bins.freq))
Sel_mode.out<-mapply(function(x) lt.bins.out[as.numeric(lt.bins.freq[x,])==max(as.numeric(lt.bins.freq[x,]))][1],x=1:nrow(lt.bins.freq))
Sel_init.out<-mapply(function(x) lt.bins.out[as.numeric(lt.bins.freq[x,])>0][1],x=1:nrow(lt.bins.freq))
lt.bins.sels<-Lt.dat.sel[,1:5]
lt.bins.sels$Sel50<-(Sel_init.out+Sel_mode.out)/2
lt.bins.sels$Sel95<-Sel_mode.out
ggplot(lt.bins.sels)+
geom_point(aes(Year,Sel50))+
facet_grid(Sex~Fleet, scales="free_y",labeller = label_both)+
xlab("Year") +
ylab("Size (cm)") +
scale_fill_viridis_d()
Lt.dat.sel<-rv.Lt$data
lt.bins.freq<-Lt.dat.sel[,6:ncol(Lt.dat.sel)]
lt.bins.out<-as.numeric(colnames(lt.bins.freq))
Sel_mode.out<-mapply(function(x) lt.bins.out[as.numeric(lt.bins.freq[x,])==max(as.numeric(lt.bins.freq[x,]))][1],x=1:nrow(lt.bins.freq))
Sel_init.out<-mapply(function(x) lt.bins.out[as.numeric(lt.bins.freq[x,])>0][1],x=1:nrow(lt.bins.freq))
lt.bins.sel50<-Lt.dat.sel95<-<-Lt.dat.sel[,1:5]
lt.bins.sel50<-Lt.dat.sel95<-Lt.dat.sel[,1:5]
lt.bins.sel50$Sel<-(Sel_init.out+Sel_mode.out)/2
lt.bins.sel95$Sel<-Sel_mode.out
lt.bins.sel50$Sel<-(Sel_init.out+Sel_mode.out)/2
Lt.bins.sel95$Sel<-Sel_mode.out
lt.bins.sel50<-Lt.bins.sel95<-Lt.dat.sel[,1:5]
lt.bins.sel50$Sel<-(Sel_init.out+Sel_mode.out)/2
Lt.bins.sel95$Sel<-Sel_mode.out
lt.bins.sels<-rbind(lt.bins.sel50,lt.bins.sel95)
lt.bins.sel50<-lt.bins.sel95<-Lt.dat.sel[,1:5]
lt.bins.sel50$Sel<-(Sel_init.out+Sel_mode.out)/2
Lt.bins.sel95$Sel<-Sel_mode.out
lt.bins.sels<-rbind(lt.bins.sel50,lt.bins.sel95)
Lt.bins.sel95
Sel_mode.out
length(Sel_mode.out)
lt.bins.sel50<-lt.bins.sel95<-Lt.dat.sel[,1:5]
lt.bins.sel50$Sel<-(Sel_init.out+Sel_mode.out)/2
lt.bins.sel95$Sel<-Sel_mode.out
lt.bins.sels<-rbind(lt.bins.sel50,lt.bins.sel95)
lt.bins.sels
lt.bins.sel50<-lt.bins.sel95<-Lt.dat.sel[,1:5]
lt.bins.sel50$Sel<-(Sel_init.out+Sel_mode.out)/2
lt.bins.sel50$SelType<-"Sel50"
lt.bins.sel95$Sel<-Sel_mode.out
lt.bins.sel95$SelType<-"Sel95"
lt.bins.sels<-rbind(lt.bins.sel50,lt.bins.sel95)
lt.bins.sels
ggplot(lt.bins.sels)+
geom_point(aes(Year,Sel50,col=SelType))+
facet_grid(Sex~Fleet, scales="free_y",labeller = label_both)+
xlab("Year") +
ylab("Size (cm)") +
scale_fill_viridis_d()
ggplot(lt.bins.sels)+
geom_point(aes(Year,Sel,col=SelType))+
facet_grid(Sex~Fleet, scales="free_y",labeller = label_both)+
xlab("Year") +
ylab("Size (cm)") +
scale_fill_viridis_d()
ggplot(lt.bins.sels)+
geom_point(aes(Year,Sel,col=SelType))+
facet_grid(Sex~Fleet, scales="free_y",labeller = label_both)+
xlab("Year") +
ylab("Size (cm)") +
scale_fill_viridis_d()+ylim(0,NA)
ggplot(lt.bins.sels)+
geom_point(aes(Year,Sel,col=SelType))+
facet_grid(Fleet, scales="free_y",labeller = label_both)+
xlab("Year") +
ylab("Size (cm)") +
scale_fill_viridis_d()+ylim(0,NA)
ggplot(lt.bins.sels)+
geom_point(aes(Year,Sel,col=SelType))+
facet_grid(Fleet, scales="free_y",labeller = label_both)+
xlab("Year") +
ylab("Size (cm)") +
scale_fill_viridis_d()+ylim(0,NA)
ggplot(lt.bins.sels)+
geom_point(aes(Year,Sel,col=SelType))+
facet_grid(~Fleet, scales="free_y",labeller = label_both)+
xlab("Year") +
ylab("Size (cm)") +
scale_fill_viridis_d()+ylim(0,NA)
ggplot(lt.bins.sels)+
geom_point(aes(Year,Sel,col=SelType))+ geom_smooth(aes(Year,Sel,col=SelType))+
facet_grid(~Fleet, scales="free_y",labeller = label_both)+
xlab("Year") +
ylab("Size (cm)") +
scale_fill_viridis_d()+ylim(0,NA)
ggplot(lt.bins.sels)+
geom_point(aes(Year,Sel,col=SelType))+ geom_smooth(aes(Year~Sel,col=SelType))+
facet_grid(~Fleet, scales="free_y",labeller = label_both)+
xlab("Year") +
ylab("Size (cm)") +
scale_fill_viridis_d()+ylim(0,NA)
ggplot(lt.bins.sels)+
geom_point(aes(Year,Sel,col=SelType))+ geom_smooth(aes(Year,Sel,col=SelType))+
facet_grid(~Fleet, scales="free_y",labeller = label_both)+
xlab("Year") +
ylab("Size (cm)") +
scale_fill_viridis_d()+ylim(0,NA)
ggplot(lt.bins.sels)+
geom_point(aes(Year,Sel,col=SelType))+ geom_smooth(aes(Year,Sel,col=SelType,method=lm))+
facet_grid(~Fleet, scales="free_y",labeller = label_both)+
xlab("Year") +
ylab("Size (cm)") +
scale_fill_viridis_d()+ylim(0,NA)
ggplot(lt.bins.sels)+
geom_point(aes(Year,Sel,col=SelType))+ geom_smooth(se=FALSE,aes(Year,Sel,col=SelType))+
facet_grid(~Fleet, scales="free_y",labeller = label_both)+
xlab("Year") +
ylab("Size (cm)") +
scale_fill_viridis_d()+ylim(0,NA)
ggplot(lt.bins.sels)+
geom_point(aes(Year,Sel,col=SelType))+ geom_smooth(method=lm,se=FALSE,aes(Year,Sel,col=SelType))+
facet_grid(~Fleet, scales="free_y",labeller = label_both)+
xlab("Year") +
ylab("Size (cm)") +
scale_fill_viridis_d()+ylim(0,NA)
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
ct.flt
unique(na.omit(c(ct.flt,lt.flt,age.flt,index.flt)))[unique(na.omit(c(ct.flt,lt.flt,age.flt,index.flt)))>0]
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
rep("NA,",5)
paste(rep("NA",5),collapse(","))
paste(as.character(rep("NA",5)),collapse(","))
class(rep("NA",5))
paste(as.character(rep("NA",5)),sep="''",collapse(","))
one<-c(1:5)
paste(as.character(one), collapse=", ")
one<-rep(NA,5)
paste(as.character(one), collapse=", ")
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
