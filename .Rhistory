install.packages(c("admisc", "antiword", "arkdb", "bayesplot", "bbmle", "BH", "bindrcpp", "bookdown", "boot", "brew", "brio", "bslib", "Cairo", "callr", "checkmate", "cli", "cluster", "coda", "commonmark", "copula", "covr", "cowplot", "cpp11", "crosstalk", "curl", "data.table", "datamods", "datawizard", "DBI", "deldir", "desc", "descr", "DescTools", "deSolve", "DiagrammeR", "digest", "diptest", "distributional", "dotCall64", "dplyr", "DT", "duckdb", "e1071", "emmeans", "esquisse", "estimability", "evaluate", "expm", "fansi", "fastICA", "fBasics", "ff", "fGarch", "filelock", "float", "fmesher", "fmsb", "FNN", "foreign", "fpc", "fracdiff", "future", "future.apply", "GA", "gbm", "gdtools", "GenSA", "gert", "GGally", "gganimate", "ggdist", "ggeffects", "ggforce", "ggfun", "gghighlight", "ggiraph", "ggm", "ggnewscale", "ggplot2", "ggraph", "ggrepel", "ggridges", "ggthemes", "git2r", "glue", "GPArotation", "gplots", "graphlayouts", "gt", "gtools", "h2o", "hardhat", "haven", "htmltools", "ht
mlwidgets", "httpuv", "httr2", "igraph", "insight", "interp", "ISOcodes", "jsonlite", "kableExtra", "ks", "lares", "later", "lattice", "lava", "lavaan", "LiblineaR", "lifecycle", "lintr", "lisrelToR", "listenv", "lme4", "loo", "lpSolve", "magick", "maps", "markdown", "MASS", "Matrix", "MatrixExtra", "MatrixModels", "matrixStats", "mclust", "mcmc", "MCMCpack", "memisc", "mgcv", "MSEtool", "msm", "multicool", "mvtnorm", "network", "nleqslv", "nlme", "nlstools", "officer", "OpenMx", "pak", "paletteer", "parallelly", "patchwork", "pcaPP", "phylobase", "phylosem", "pkgbuild", "pkgcache", "pkgdepends", "pkgload", "plot3D", "plotly", "plotrix", "pracma", "pROC", "processx", "progress", "ps", "pscl", "psych", "qgraph", "quanteda.textplots", "quanteda.textstats", "quantmod", "QuickJSR", "R.devices", "R.oo", "R.rsp", "R.utils", "R2jags", "R2WinBUGS", "ragg", "rainbow", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "Rdpack", "readr", "recipes", "renv", "reprex", "reticulate", "rfishbase", "rgl"
, "Rglpk", "rjags", "rJava", "RJSONIO", "rlang", "rnaturalearth", "robustbase", "RODBC", "roxygen2", "rpart", "rpart.plot", "rprojroot", "rrcov", "rsconnect", "RSQLite", "rstan", "rstanarm", "rstantools", "rticles", "Rtsne", "RUnit", "rvest", "s2", "sandwich", "sass", "scales", "sdmTMB", "segmented", "seqinr", "servr", "sets", "sf", "shape", "shiny", "shinybusy", "shinyWidgets", "sna", "snowfall", "sp", "spacyr", "spdep", "StanHeaders", "stm", "stringi", "stringr", "survival", "svglite", "TeachingDemos", "tensorA", "terra", "tesseract", "testthat", "text2vec", "tidygraph", "tidyr", "timechange", "timeDate", "timeSeries", "tinytex", "TMB", "tmvtnorm", "topicmodels", "transformr", "tseries", "TTR", "tweenr", "units", "usethis", "uuid", "V8", "vcd", "vctrs", "viridis", "vroom", "waldo", "wesanderson", "withr", "wk", "writexl", "xfun", "XML", "xml2", "xts", "yaml", "yulab.utils", "zip"))
install.packages("RcppEigen")
install.packages("deldir")
install.packages(c("ggraph", "RcppEigen"))
shiny::runApp('Github/SS-DL-tool')
OR.tsc<-SS_output("C:/Users/Jason.Cope/Documents/Github/Sebastes_melanops_OR/Document/models/Reference model")
TSCplot(OR.tsc)
shiny::runApp('Github/SS-DL-tool')
qlnorm(.45,0.2)
qlnorm(.45,0,0.2)
qlnorm(.45,0,2)
shiny::runApp('Github/Shiny_IGOR+')
shiny::runApp('Github/SS-DL-tool')
is.na(input$Depl_mean_sss)|input$Depl_mean_sss<0
input$status_year
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
?profile
?run_diagnostics
edit(run_diagnostics)
?profile_wrapper
(profile_wrapper)
edit(profile_wrapper)
runApp('Github/SS-DL-tool')
edit(profile_wrapper)
edit(get_settings_profile)
edit(get_settings)
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
lt.bins.freq
lt.bins.freq[1,]
lt.bins.freq[1,]>0
lt.bins.freq[1,lt.bins.freq[1,]>0]
length(lt.bins.freq[1,lt.bins.freq[1,]>0])
lt.bins.out[length(lt.bins.freq[1,lt.bins.freq[1,]>0])]
lt.bins.out[lt.bins.freq[1,lt.bins.freq[1,]>0])]
lt.bins.out[lt.bins.freq[1,lt.bins.freq[1,]>0]]
lt.bins.freq[1,lt.bins.freq[1,]>0]
lt.bins.out[1,lt.bins.freq[1,]>0]
lt.bins.out[lt.bins.freq[1,]>0]
max(lt.bins.out[lt.bins.freq[1,]>0])
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
Lt.Gr.plot.L50
Lt.Gr.plot.Linf
Lt.Gr.plot
rv.Lt$data
Lt.Gr.plot
Lt.dat.plot.Linf
runApp('Github/SS-DL-tool')
Lt.dat.plot.Linf
Lt.dat.plot
Lt.dat.plot.L50
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
input <- readRDS("~/Github/SS-DL-tool/shiny_bookmarks/1cb0378c878f1708/input.rds")
input
View(input)
View(input)
?command
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
L50()
L50()
min(lt.bins.sels()$Year)
lt.bins.sels()$Year
lt.bins.sels()
lt.bins.sels()$Year
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
lt.bins.sels.in
lt.bins.sels.in$Sex==0|lt.bins.sels.in$Sex==1
Linf()
lt.bins.sels.in$Linf[lt.bins.sels.in$Sex==0|lt.bins.sels.in$Sex==1]<-Linf()
lt.bins.sels.in
lt.bins.sels.in$L50
Q
Q
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
Lt.dat.plot.L50
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
load(paste0(dir_2024,"WA_cab_2024_0.65_32724/SSS_out.DMP"))
#2024
dir_2024<-"C:/Users/Jason.Cope/Documents/Github/SS-DL-tool/Scenarios/"
load(paste0(dir_2024,"WA_cab_2024_0.65_32724/SSS_out.DMP"))
WA_cab_0.65<-SSS.out
load(paste0(dir_2024,"WA_cab_2024_0.40_32724/SSS_out.DMP"))
WA_cab_0.4<-SSS.out
load(paste0(dir_2024,"WA_cab_2024_0.55_32724/SSS_out.DMP"))
WA_cab_0.55<-SSS.out
load(paste0(dir_2024,"WA_cab_2024_0.75_32724/SSS_out.DMP"))
WA_cab_0.75<-SSS.out
load(paste0(dir_2024,"WA_cab_2024_0.90_32724/SSS_out.DMP"))
WA_cab_0.9<-SSS.out
OFLs<-rbind(WA_cab_0.4$OFL[,1:2],WA_cab_0.55$OFL[,1:2],WA_cab_0.65$OFL[,1:2],WA_cab_0.75$OFL[,1:2],WA_cab_0.9$OFL[,1:2])
ABCs<-rbind(WA_cab_0.4$ABC[,1:2],WA_cab_0.55$ABC[,1:2],WA_cab_0.65$ABC[,1:2],WA_cab_0.75$ABC[,1:2],WA_cab_0.9$ABC[,1:2])
summary(OFLs)
summary(ABCs)
OFLs.all<-rbind(WA_cab_0.4$OFL,WA_cab_0.55$OFL,WA_cab_0.65$OFL,WA_cab_0.75$OFL,WA_cab_0.9$OFL)
ABCs.all<-rbind(WA_cab_0.4$ABC,WA_cab_0.55$ABC,WA_cab_0.65$ABC,WA_cab_0.75$ABC,WA_cab_0.9$ABC)
Deps.all<-rbind(WA_cab_0.4$Rel,WA_cab_0.55$Rel,WA_cab_0.65$Rel,WA_cab_0.75$Rel,WA_cab_0.9$Rel)
summary(OFLs.all)
summary(ABCs.all)
summary(Deps.all)
cbind(apply(OFLs.all,2,median),apply(ABCs.all,2,median))
apply(Deps.all[,c(58:76)],2,median)
Deps.all
head(Deps.all)
apply(Deps.all[,c(58:76)],2,median)
apply(Deps.all,2,median)
cbind(as.numeric(rownames(Deps.all)),apply(Deps.all,2,median))
cbind(as.numeric(colnames(Deps.all)),apply(Deps.all,2,median))
apply(WA_cab_0.65$Rel,2,median)
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
prof_parms_names
parmnames
SS_parm_names
parmnames_vec
SS_parm_names[parmnames_vec%in%parmnames]
parmnames_vec%in%parmnames
SS_parm_names
rep.parms.names
SS_parm_names<-rep.parms.names
parmnames_vec<-c("Steepness","lnR0","Natural mortality female","Linf female","k female", "CV@Lt young female","CV@Lt old female","Natural mortality male","Linf male","k male", "CV@Lt young male", "CV@Lt old male","LnQ_base_Acoustic_Visual(6)")
prof_parms_names<-SS_parm_names[parmnames_vec%in%parmnames]
prof_parms_names
parmnames
parmnames_vec
rep.parms.names
rep.parms.names==SR_BH_steep
rep.parms.names=="SR_BH_steep"
rep.parms.names=="steep"
rep.parms.names
?get
?grep
grep("steep",rep.parms.names)
rep.parms.names[grep("R0",rep.parms.names)]
rep.parms.names[grep("NatM",rep.parms.names)]
rep.parms.names[grep("K_fem",rep.parms.names)]
rep.parms.names[grep("K_fem",rep.parms.names)]
grep("K_fem",rep.parms.names)
grep("L_at_Amax_Fem",rep.parms.names)
grep("Fem",rep.parms.names)
grep("Fem_k",rep.parms.names)
grep("Fem_K",rep.parms.names)
grep("K_Fem",rep.parms.names)
rep.parms.names[1:20]
grep("CV_young_Fem",rep.parms.names)
grep("CV_old_Fem",rep.parms.names)
grep("CV_old_Mal",rep.parms.names)
SS_parm_names<-c(rep.parms.names[grep("steep",rep.parms.names)], rep.parms.names[grep("R0",rep.parms.names)],rep.parms.names[grep("NatM",rep.parms.names)][1],rep.parms.names[grep("L_at_Amax_Fem",rep.parms.names)],rep.parms.names[grep("K_Fem",rep.parms.names)],rep.parms.names[grep("CV_young_Fem",rep.parms.names)],rep.parms.names[grep("CV_old_Fem",rep.parms.names)],rep.parms.names[grep("NatM",rep.parms.names)][2],rep.parms.names[grep("L_at_Amax_Mal",rep.parms.names)],rep.parms.names[grep("K_Mal",rep.parms.names)],rep.parms.names[grep("CV_young_Mal",rep.parms.names)],rep.parms.names[grep("CV_old_Mal",rep.parms.names)])
SS_parm_names
parmnames_vec<-c("Steepness","lnR0","Natural mortality female","Linf female","k female", "CV@Lt young female","CV@Lt old female","Natural mortality male","Linf male","k male", "CV@Lt young male", "CV@Lt old male")
prof_parms_names<-SS_parm_names[parmnames_vec%in%parmnames]
prof_parms_names
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
prof_parms_names
model_settings
get
runApp('Github/SS-DL-tool')
722/2166
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
77640-5140
runApp('Github/SS-DL-tool')
install.packages(c("admisc", "arm", "bdsmatrix", "bookdown", "brms", "bslib", "callr", "codetools", "curl", "data.table", "datawizard", "dbplyr", "digest", "duckdb", "Epi", "FactoMineR", "fda", "fGarch", "flextable", "forecast", "future", "future.apply", "gdtools", "ggdist", "ggeffects", "ggraph", "ggsci", "gh", "glmmTMB", "globals", "GPArotation", "graphlayouts", "Hmisc", "hrbrthemes", "htmltools", "httpuv", "httr2", "igraph", "insight", "lattice", "lava", "lintr", "lme4", "locfit", "multcompView", "munsell", "naivebayes", "pak", "parallelly", "phylopath", "phylosem", "pkgbuild", "pkgdepends", "processx", "psych", "qpdf", "ragg", "RcppArmadillo", "remotes", "renv", "repr", "rgl", "rmarkdown", "rms", "RSQLite", "rstan", "rstudioapi", "sass", "sdmTMB", "servr", "sf", "shiny", "shinybusy", "shinyWidgets", "spelling", "StanHeaders", "survey", "systemfonts", "tictoc", "tidyselect", "tinytex", "tm", "TMB", "TropFishR", "ulid", "xfun"))
shiny::runApp('Github/SS-DL-tool')
shiny::runApp('Github/SS-DL-tool')
install.packages("htmltools")
remove.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages(c("curl", "data.table", "datamods", "digest", "DT", "gdtools", "httpuv", "igraph", "lattice", "parallelly", "pkgcache", "processx", "quanteda", "ragg", "rsconnect", "rstan", "sass", "sdmTMB", "shinyWidgets", "StanHeaders", "systemfonts", "xfun"))
install.packages("digest")
remove.packages("digest")
install.packages("digest")
install.packages("lattice")
install.packages("parallelly")
shiny::runApp('Github/SS-DL-tool')
shiny::runApp('Github/SS-DL-tool')
library(FishLife)
remotes::install_github( 'ropensci/rfishbase@fb-21.06', force=TRUE )
remotes::install_github("ropensci/rfishbase@fb-21.06",force=TRUE)
remotes::install_github('ropensci/rfishbase@fb-21.06',force=TRUE)
install.packages("C:/Users/Jason.Cope/Downloads/ropensci-rfishbase-fb-21.06-0-g4999b43.tar.gz", repos = NULL, type = "source")
library(FishLife)
install.packages(c("boot", "broom.helpers", "codetools", "ggstats", "lattice", "proxyC", "RcppArmadillo", "rfishbase"))
install.packages("C:/Users/Jason.Cope/Downloads/ropensci-rfishbase-fb-21.06-0-g4999b43.tar.gz", repos = NULL, type = "source")
shiny::runApp('Github/SS-DL-tool')
?run
remotes::install_github("r4ss/r4ss")
install.packages("C:/Users/Jason.Cope/Downloads/r4ss-r4ss-v1.46.1-441-g7c116c6.tar.gz", repos = NULL, type = "source")
Run write('CURL_SSL_BACKEND=openssl', file = "~/.Renviron", append = TRUE)
write('CURL_SSL_BACKEND=openssl', file = "~/.Renviron", append = TRUE)
curl::curl_version()$ssl_version
remotes::install_github("chantelwetzel-noaa/HandyCode")
remotes::install_github("nwfsc-assess/nwfscDiag")
x<-NA
x
x<-c(NA,1)
x==NA
x
x=="NA"
is.na(NA)
is.na(x)
any(is.na(x))
shiny::runApp('Github/SS-DL-tool')
shiny::runApp('Github/SS-DL-tool')
shiny::runApp('Github/SS-DL-tool')
shiny::runApp('Github/SS-DL-tool')
input$Sel50
is.char(input$Sel50)
class(input$Sel50)
is.character(input$Sel50)
?str_detect
str_detect(input$Sel50NA)
str_detect(input$Sel50,NA)
str_detect(input$Sel50,"NA")
x<-c("1,NA")
str_detect(x,"NA")
x<-c("1,1")
str_detect(x,"NA")
str_detect(input$Sel50,"NA")
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
all(!is.null(input$Selpeak)
)
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
shiny::runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
75/115
0.65*40
runApp('Github/SS-DL-tool')
shiny::runApp('Github/SS-DL-tool')
shiny::runApp('Github/SS-DL-tool')
